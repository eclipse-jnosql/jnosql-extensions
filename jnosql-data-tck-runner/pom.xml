<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~
  ~  Copyright (c) 2024 Contributors to the Eclipse Foundation
  ~   All rights reserved. This program and the accompanying materials
  ~   are made available under the terms of the Eclipse Public License v1.0
  ~   and Apache License v2.0 which accompanies this distribution.
  ~   The Eclipse Public License is available at http://www.eclipse.org/legal/epl-v10.html
  ~   and the Apache License v2.0 is available at http://www.opensource.org/licenses/apache2.0.php.
  ~
  ~   You may elect to redistribute this code under either of these licenses.
  ~
  ~   Contributors:
  ~
  ~   Kyle Aure
  ~	  Maximillian Arruda
  ~
  -->
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>org.eclipse.jnosql.mapping</groupId>
		<artifactId>jnosql-mapping-extensions</artifactId>
		<version>1.1.9-SNAPSHOT</version>
	</parent>

	<artifactId>jnosql-data-tck-runner</artifactId>
	<name>Jakarta Data TCK Runner for Eclipse JNoSQL</name>

	<repositories>
		<!-- For artifacts not yet in Maven Central -->
		<repository>
			<id>sonatype-nexus-staging</id>
			<name>Sonatype Nexus Staging</name>
			<url>https://jakarta.oss.sonatype.org/content/repositories/staging/</url>
			<releases>
				<enabled>true</enabled>
			</releases>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</repository>
	</repositories>

	<properties>
		<targetDirectory>${project.basedir}/target</targetDirectory>

		<!-- Dependency versions -->
		<jakarta.data.version>1.0.1</jakarta.data.version>
		<jakarta.servlet.version>6.1.0</jakarta.servlet.version>
		<jakarta.enterprise.cdi.version>4.1.0</jakarta.enterprise.cdi.version>

		<arquillian.version>1.8.0.Final</arquillian.version>
		<junit.version>5.10.2</junit.version>
		<shrinkwrap.version>1.2.6</shrinkwrap.version>
		<sigtest.version>2.3</sigtest.version>
		<weld.junit5.version>4.0.3.Final</weld.junit5.version>
		<testcontainers.version>1.19.8</testcontainers.version>
		<!-- Pointer to logging.properties file that has the java.util.logging
   configuration -->
		<logging.config>${project.basedir}/logging.properties</logging.config>
		<org.jboss.logging.provider>jdk</org.jboss.logging.provider>

		<!-- TCK settings -->
		<included.groups><![CDATA[standalone & nosql]]></included.groups>
	</properties>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.junit</groupId>
				<artifactId>junit-bom</artifactId>
				<version>${junit.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<dependencies>
		<!-- tck - data - external TCK -->
		<dependency>
			<groupId>jakarta.data</groupId>
			<artifactId>jakarta.data-tck</artifactId>
			<version>${jakarta.data.version}</version>
		</dependency>
		<!-- api - data -->
		<dependency>
			<groupId>jakarta.data</groupId>
			<artifactId>jakarta.data-api</artifactId>
			<version>${jakarta.data.version}</version>
		</dependency>
		<!-- impl - data -->
		<!-- TODO figure out how to start a MongoDB instance, and configure it -->
		<dependency>
			<groupId>org.eclipse.jnosql.databases</groupId>
			<artifactId>jnosql-mongodb</artifactId>
			<version>${project.version}</version>
		</dependency>
		<!-- test frameworks -->
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter</artifactId>
			<version>${junit.version}</version>
		</dependency>
		<dependency>
			<groupId>jakarta.tck</groupId>
			<artifactId>sigtest-maven-plugin</artifactId>
			<version>${sigtest.version}</version>
		</dependency>
	<!-- CDI for resource injection - managed by Junit -->
        <dependency>
            <groupId>org.jboss.weld</groupId>
            <artifactId>weld-junit5</artifactId>
            <version>${weld.junit5.version}</version>
        </dependency>
		<!-- APIs referenced by TCK that do not require implementations for standalone tests -->
		<dependency>
			<groupId>org.jboss.shrinkwrap</groupId>
			<artifactId>shrinkwrap-api</artifactId>
			<version>${shrinkwrap.version}</version>
		</dependency>
		<dependency>
			<groupId>org.jboss.arquillian.junit5</groupId>
			<artifactId>arquillian-junit5-core</artifactId>
			<version>${arquillian.version}</version>
		</dependency>
		<dependency>
			<groupId>jakarta.servlet</groupId>
			<artifactId>jakarta.servlet-api</artifactId>
			<version>${jakarta.servlet.version}</version>
		</dependency>
		<!-- APIs referenced by TCK that do require implementations for standalone tests -->
		<dependency>
			<groupId>jakarta.enterprise</groupId>
			<artifactId>jakarta.enterprise.cdi-api</artifactId>
			<version>${jakarta.enterprise.cdi.version}</version>
		</dependency>

		<dependency>
			<groupId>org.testcontainers</groupId>
			<artifactId>testcontainers</artifactId>
			<version>${testcontainers.version}</version>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<directory>${targetDirectory}</directory>
		<plugins>
			<plugin>
				<artifactId>maven-dependency-plugin</artifactId>
				<executions>
					<execution>
						<phase>compile</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>3.0.0</version>
				<configuration>
					<trimStackTrace>false</trimStackTrace>
					<failIfNoTests>true</failIfNoTests>
					<statelessTestsetReporter
						implementation="org.apache.maven.plugin.surefire.extensions.junit5.JUnit5Xml30StatelessReporter">
						<usePhrasedTestCaseMethodName>true</usePhrasedTestCaseMethodName>
						<usePhrasedTestCaseClassName>true</usePhrasedTestCaseClassName>
					</statelessTestsetReporter>
					<systemPropertyVariables>
						<java.util.logging.config.file>${logging.config}</java.util.logging.config.file>
						<jimage.dir>target/tck-classes</jimage.dir>
						<signature.sigTestClasspath>
							${project.build.directory}/dependency/jakarta.data-api-${jakarta.data.api.version}.jar
						</signature.sigTestClasspath>
						<jakarta.tck.skip.deployment>true</jakarta.tck.skip.deployment>
						<jakarta.tck.database.type>DOCUMENT</jakarta.tck.database.type>
						<jakarta.tck.consistency.delay>0</jakarta.tck.consistency.delay>
					</systemPropertyVariables>
					<groups>${included.groups}</groups>
					<reportNameSuffix>standalone</reportNameSuffix>
				</configuration>
			</plugin>
		</plugins>
	</build>
</project>
